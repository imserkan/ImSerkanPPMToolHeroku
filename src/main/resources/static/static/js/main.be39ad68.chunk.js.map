{"version":3,"sources":["actions/types.js","actions/projectActions.js","components/Project/ProjectItem.js","components/Project/CreateButton.js","components/Layout/Loading.js","components/Dashboard.js","securityUtils/setJWToken.js","actions/securityActions.js","components/Layout/Header.js","components/Project/AddProject.js","reducers/errorReducer.js","reducers/projectReducer.js","reducers/backlogReducer.js","reducers/securityReducer.js","reducers/profileReducer.js","reducers/index.js","store.js","components/Project/UpdateProject.js","actions/backlogActions.js","components/ProjectBoard/ProjectTasks/ProjectTask.js","components/ProjectBoard/Backlog.js","components/ProjectBoard/ProjectBoard.js","components/ProjectBoard/ProjectTasks/AddProjectTask.js","components/ProjectBoard/ProjectTasks/UpdateProjectTask.js","components/Layout/Landing.js","components/UserComponent/Register.js","components/UserComponent/Login.js","components/UserComponent/Profile.js","securityUtils/SecureRoutes.js","components/UserComponent/UserProfile/UpdateUserProfile.js","actions/uploadActions.js","App.js","registerServiceWorker.js","index.js"],"names":["GET_ERRORS","createProject","project","history","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","dispatch","wrap","_context","prev","next","axios","post","push","type","payload","t0","response","data","stop","this","_x","apply","arguments","ProjectItem","onDeleteClick","id","_this","props","deleteProject","react_default","createElement","className","projectIdentifier","projectName","description","Link","to","concat","onClick","bind","Component","connect","_ref4","_callee4","_context4","window","confirm","delete","_x4","CreateProjectButton","Fragment","Loading","title","version","xmlns","x","y","width","height","viewBox","fill","attributeType","attributeName","values","begin","dur","repeatCount","Dashboard","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","errors","ready","match","params","getProjects","nextProps","setState","boardContent","_this2","projects","CreateButton","map","Project_ProjectItem","key","Layout_Loading","_ref2","_callee2","res","_context2","get","sent","_x2","setJWToken","token","defaults","headers","common","logout","localStorage","removeItem","getUser","username","_ref5","_callee5","_context5","_x5","Header","location","href","headerLinks","_this$props$security","security","validToken","user","userAuthenticated","userNotAuthenticated","data-toggle","data-target","AddProject","startDate","endDate","onChange","assertThisInitialized","onSubmit","e","defineProperty","target","name","value","preventDefault","newProject","classnames","is-invalid","placeholder","align","initialState","project_tasks","project_task","profileUser","combineReducers","length","undefined","action","objectSpread","filter","backlog","projectSequence","profile","initalState","middleware","thunk","ReactReduxDevTools","__REDUX_DEVTOOLS_EXTENSION__","store","navigator","userAgent","includes","createStore","rootReducer","compose","applyMiddleware","UpdateProject","_nextProps$project","getProject","updateProject","disabled","_ref3","_callee3","_context3","_x3","addProjectTask","backlog_id","ProjectTask","sequence","deleteProjectTask","priorityString","priorityClass","priority","summary","acceptanceCriteria","Backlog","tasks","ProjectTasks_ProjectTask","toDoItems","inProgressItems","doneItems","incompleteItems","i","status","ProjectBoard","getBacklog","projectNotFound","role","ProjectBoard_Backlog","boardAlgorithm","AddProjectTask","dueDate","newProjectTask","UpdateProjectTask","createdAt","_nextProps$project_ta","getProjectTask","updatedProjectTask","Landing","Register","fullname","password","confirmPassword","newUser","createNewUser","required","Login","newLogin","login","loginRequest","decoded","setItem","jwt_decode","Profile","editContent","genderContent","gender","editButton","console","log","alt","src","userNotFound","department","hire_date","birth_date","address","phoneNumber","data-original-title","component","otherProps","objectWithoutProperties","Route","assign","render","Redirect","UpdateUserProfile","fileSelectedHandler","event","selectedFile","files","fileUploadHandler","fd","FormData","append","fileUpload","_nextProps$profileUse","updateProfile","updateUser","file","onUploadProgress","progressEvent","Math","round","loaded","total","jwtToken","currentTime","Date","now","exp","App","es","BrowserRouter","Layout_Header","exact","path","Switch","SecureRoutes","isLocalhost","Boolean","hostname","registerValidSW","swUrl","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","ReactDOM","src_App_0","document","getElementById","URL","process","origin","addEventListener","fetch","indexOf","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.be39ad68.chunk.js","sourcesContent":["export const GET_ERRORS = \"GET_ERRORS\";\r\nexport const GET_PROJECTS = \"GET_PROJECTS\";\r\nexport const GET_PROJECT = \"GET_PROJECT\";\r\nexport const DELETE_PROJECT = \"DELETE_PROJECT\";\r\n\r\nexport const GET_BACKLOG = \"GET_BACKLOG\";\r\nexport const GET_PROJECT_TASK = \"GET_PROJECT_TASK\";\r\nexport const DELETE_PROJECT_TASK = \"DELETE_PROJECT_TASK\";\r\n\r\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\r\nexport const GET_USER = \"GET_USER\";\r\n\r\nexport const GET_UPLOADED_FILE = \"GET_UPLOADED_FILE\";\r\n","import axios from \"axios\";\r\nimport { GET_ERRORS, GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"./types\";\r\n\r\nexport const createProject = (project, history) => async dispatch => {\r\n  try {\r\n    await axios.post(\"/api/project/\", project);\r\n    history.push(\"/dashboard\");\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {}\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const getProjects = () => async dispatch => {\r\n  const res = await axios.get(\"/api/project/\");\r\n  dispatch({\r\n    type: GET_PROJECTS,\r\n    payload: res.data\r\n  });\r\n};\r\n\r\nexport const getProject = (id, history) => async dispatch => {\r\n  try {\r\n    const res = await axios.get(`/api/project/${id}`);\r\n    dispatch({\r\n      type: GET_PROJECT,\r\n      payload: res.data\r\n    });\r\n  } catch (error) {\r\n    history.push(\"/dashboard\");\r\n  }\r\n};\r\n\r\nexport const deleteProject = id => async dispatch => {\r\n  if (\r\n    window.confirm(\r\n      \"Are you sure? This will delete the project and all the data related to it.\"\r\n    )\r\n  ) {\r\n    await axios.delete(`/api/project/${id}`);\r\n    dispatch({\r\n      type: DELETE_PROJECT,\r\n      payload: id\r\n    });\r\n  }\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { deleteProject } from \"../../actions/projectActions\";\r\n\r\nclass ProjectItem extends Component {\r\n  onDeleteClick = id => {\r\n    this.props.deleteProject(id);\r\n  };\r\n\r\n  render() {\r\n    const { project } = this.props;\r\n    return (\r\n      <div className=\"container singleProject\">\r\n        <div className=\"card-body mb-3 text-white\">\r\n          <div className=\"row\">\r\n            <div className=\"col-2\">\r\n              <span className=\"mx-auto\">{project.projectIdentifier}</span>\r\n            </div>\r\n            <div className=\"col-lg-6 col-md-4 col-6 col-xs-4 d-lg-block\">\r\n              <h3>{project.projectName}</h3>\r\n              <p>{project.description}</p>\r\n            </div>\r\n            <div className=\"col-md-4 col-xs-4 col-4\">\r\n              <ul className=\"list-group\">\r\n                <Link to={`/projectBoard/${project.projectIdentifier}`}>\r\n                  <li className=\"list-group-item board\">\r\n                    <i className=\"fa fa-flag-checkered pr-1\"> Project Board </i>\r\n                  </li>\r\n                </Link>\r\n                <Link to={`/updateProject/${project.projectIdentifier}`}>\r\n                  <li className=\"list-group-item update\">\r\n                    <i className=\"fa fa-edit pr-1\"> Update Project Info</i>\r\n                  </li>\r\n                </Link>\r\n                <li\r\n                  className=\"list-group-item delete\"\r\n                  onClick={this.onDeleteClick.bind(\r\n                    this,\r\n                    project.projectIdentifier\r\n                  )}\r\n                >\r\n                  <i className=\"fa fa-minus-circle pr-1\"> Delete Project</i>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nProjectItem.propTypes = {\r\n  deleteProject: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  { deleteProject }\r\n)(ProjectItem);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst CreateProjectButton = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <Link to=\"/addProject\" className=\"btn btn-lg btn-info\">\r\n        Create a Project\r\n      </Link>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default CreateProjectButton;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Loading extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"loader loader--style4 col-md-12\" title=\"3\">\r\n        <svg\r\n          version=\"1.1\"\r\n          id=\"Layer_1\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          x=\"0px\"\r\n          y=\"0px\"\r\n          width=\"24px\"\r\n          height=\"24px\"\r\n          viewBox=\"0 0 24 24\"\r\n        >\r\n          <rect x=\"0\" y=\"0\" width=\"4\" height=\"7\" fill=\"#333\">\r\n            <animateTransform\r\n              attributeType=\"xml\"\r\n              attributeName=\"transform\"\r\n              type=\"scale\"\r\n              values=\"1,1; 1,3; 1,1\"\r\n              begin=\"0s\"\r\n              dur=\"0.6s\"\r\n              repeatCount=\"indefinite\"\r\n            />\r\n          </rect>\r\n\r\n          <rect x=\"10\" y=\"0\" width=\"4\" height=\"7\" fill=\"#333\">\r\n            <animateTransform\r\n              attributeType=\"xml\"\r\n              attributeName=\"transform\"\r\n              type=\"scale\"\r\n              values=\"1,1; 1,3; 1,1\"\r\n              begin=\"0.2s\"\r\n              dur=\"0.6s\"\r\n              repeatCount=\"indefinite\"\r\n            />\r\n          </rect>\r\n          <rect x=\"20\" y=\"0\" width=\"4\" height=\"7\" fill=\"#333\">\r\n            <animateTransform\r\n              attributeType=\"xml\"\r\n              attributeName=\"transform\"\r\n              type=\"scale\"\r\n              values=\"1,1; 1,3; 1,1\"\r\n              begin=\"0.4s\"\r\n              dur=\"0.6s\"\r\n              repeatCount=\"indefinite\"\r\n            />\r\n          </rect>\r\n        </svg>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Loading;\r\n","import React, { Component } from \"react\";\r\nimport ProjectItem from \"./Project/ProjectItem\";\r\nimport CreateProjectButton from \"./Project/CreateButton\";\r\nimport { connect } from \"react-redux\";\r\nimport { getProjects } from \"../actions/projectActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport Loading from \"./Layout/Loading\";\r\n\r\nclass Dashboard extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      errors: {}\r\n    };\r\n    this.ready = false;\r\n  }\r\n  componentDidMount() {\r\n    const id = this.props.match.params.id;\r\n    this.props.getProjects(id);\r\n  }\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n    this.ready = true;\r\n  }\r\n  render() {\r\n    const projects = this.props.project.projects;\r\n    let boardContent;\r\n    const boardAlgorithm = () => {\r\n      if (this.ready) {\r\n        return (\r\n          <div className=\"projects\">\r\n            <div className=\"container\">\r\n              <div className=\"row\">\r\n                <div className=\"col-md-12\">\r\n                  <h1 className=\"display-4 text-center text-white\">Projects</h1>\r\n                  <br />\r\n                  <CreateProjectButton />\r\n                  <br />\r\n                  <hr />\r\n                  {projects.map(project => (\r\n                    <ProjectItem key={project.id} project={project} />\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n      } else {\r\n        return <Loading />;\r\n      }\r\n    };\r\n    boardContent = boardAlgorithm();\r\n    return <div className=\"container\"> {boardContent}</div>;\r\n  }\r\n}\r\nDashboard.propTypes = {\r\n  project: PropTypes.object.isRequired,\r\n  getProjects: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  project: state.project\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getProjects }\r\n)(Dashboard);\r\n","import axios from \"axios\";\r\n\r\nconst setJWToken = token => {\r\n  if (token) {\r\n    axios.defaults.headers.common[\"Authorization\"] = token;\r\n  } else {\r\n    delete axios.defaults.headers.common[\"Authorization\"];\r\n  }\r\n};\r\n\r\nexport default setJWToken;\r\n","import axios from \"axios\";\r\nimport { GET_ERRORS, SET_CURRENT_USER, GET_USER } from \"./types\";\r\nimport setJWToken from \"../securityUtils/setJWToken\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nexport const createNewUser = (newUser, history) => async dispatch => {\r\n  try {\r\n    await axios.post(\"/api/users/register\", newUser);\r\n    history.push(\"/login\");\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {}\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: error.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateUser = (newUser, username, history) => async dispatch => {\r\n  try {\r\n    await axios.post(`/api/profile/${username}/edit`, newUser);\r\n    history.push(`/profile/${username}`);\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {}\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: error.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const login = loginRequest => async dispatch => {\r\n  try {\r\n    const res = await axios.post(\"/api/users/login\", loginRequest);\r\n    const { token } = res.data;\r\n    localStorage.setItem(\"jwtToken\", token);\r\n    setJWToken(token);\r\n    const decoded = jwt_decode(token);\r\n    dispatch({\r\n      type: SET_CURRENT_USER,\r\n      payload: decoded\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: error.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const logout = () => async dispatch => {\r\n  localStorage.removeItem(\"jwtToken\");\r\n  setJWToken(false);\r\n  dispatch({\r\n    type: SET_CURRENT_USER,\r\n    payload: {}\r\n  });\r\n};\r\n\r\nexport const getUser = username => async dispatch => {\r\n  try {\r\n    const res = await axios.get(`/api/profile/${username}`);\r\n    dispatch({\r\n      type: GET_USER,\r\n      payload: res.data\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: error.response.data\r\n    });\r\n  }\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { logout } from \"../../actions/securityActions\";\r\n\r\nclass Header extends Component {\r\n  logout() {\r\n    this.props.logout();\r\n    window.location.href = \"/\";\r\n  }\r\n  render() {\r\n    const { validToken, user } = this.props.security;\r\n\r\n    const userAuthenticated = (\r\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n        <ul className=\"navbar-nav mr-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/dashboard\">\r\n              Dashboard\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n\r\n        <ul className=\"navbar-nav ml-auto\">\r\n          <li className=\"nav-item active\">\r\n            <Link to={`/profile/${user.username}`} className=\"nav-link\">\r\n              <i className=\"fas fa-user-circle mr-1\" /> {user.username} <i />\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link\r\n              to=\"/logout\"\r\n              className=\"nav-link\"\r\n              onClick={this.logout.bind(this)}\r\n            >\r\n              Logout\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n    const userNotAuthenticated = (\r\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n        <ul className=\"navbar-nav ml-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link to=\"/register\" className=\"nav-link\">\r\n              Sign Up\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link to=\"/login\" className=\"nav-link\">\r\n              Login\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n\r\n    let headerLinks;\r\n\r\n    if (validToken && user) {\r\n      headerLinks = userAuthenticated;\r\n    } else {\r\n      headerLinks = userNotAuthenticated;\r\n    }\r\n    return (\r\n      <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark mb-4\">\r\n        <div className=\"container\">\r\n          <Link className=\"navbar-brand\" to=\"/\">\r\n            Personal Project Management Tool\r\n          </Link>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-toggle=\"collapse\"\r\n            data-target=\"#mobile-nav\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\" />\r\n          </button>\r\n          {headerLinks}\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nHeader.propTypes = {\r\n  logout: PropTypes.func.isRequired,\r\n  security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  security: state.security\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { logout }\r\n)(Header);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { createProject } from \"../../actions/projectActions\";\r\nimport classnames from \"classnames\";\r\n\r\nclass AddProject extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      projectName: \"\",\r\n      projectIdentifier: \"\",\r\n      description: \"\",\r\n      startDate: \"\",\r\n      endDate: \"\",\r\n      errors: {}\r\n    };\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const newProject = {\r\n      projectName: this.state.projectName,\r\n      projectIdentifier: this.state.projectIdentifier,\r\n      description: this.state.description,\r\n      startDate: this.state.startDate,\r\n      endDate: this.state.endDate\r\n    };\r\n\r\n    this.props.createProject(newProject, this.props.history);\r\n  }\r\n  render() {\r\n    const { errors } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"project text-white\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-8 m-auto\">\r\n                <h5 className=\"display-4 text-center\">Create Project form</h5>\r\n                <hr />\r\n                <form onSubmit={this.onSubmit}>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className={classnames(\"form-control form-control-lg \", {\r\n                        \"is-invalid\": errors.projectName\r\n                      })}\r\n                      placeholder=\"Project Name\"\r\n                      name=\"projectName\"\r\n                      value={this.state.projectName}\r\n                      onChange={this.onChange}\r\n                    />\r\n                    {errors.projectName && (\r\n                      <div className=\"invalid-feedback\">\r\n                        {errors.projectName}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className={classnames(\"form-control form-control-lg\", {\r\n                        \"is-invalid\": errors.projectIdentifier\r\n                      })}\r\n                      placeholder=\"Unique Project ID\"\r\n                      name=\"projectIdentifier\"\r\n                      value={this.state.projectIdentifier}\r\n                      onChange={this.onChange}\r\n                    />\r\n                    {errors.projectIdentifier && (\r\n                      <div className=\"invalid-feedback\">\r\n                        {errors.projectIdentifier}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <textarea\r\n                      className={classnames(\"form-control form-control-lg\", {\r\n                        \"is-invalid\": errors.description\r\n                      })}\r\n                      placeholder=\"Project Description\"\r\n                      name=\"description\"\r\n                      value={this.state.description}\r\n                      onChange={this.onChange}\r\n                    />\r\n                    {errors.description && (\r\n                      <div className=\"invalid-feedback\">\r\n                        {errors.description}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <h6 align=\"right\">Start Date</h6>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"date\"\r\n                      className=\"form-control form-control-lg\"\r\n                      name=\"startDate\"\r\n                      value={this.state.startDate}\r\n                      onChange={this.onChange}\r\n                    />\r\n                  </div>\r\n                  <h6 align=\"right\">Estimated End Date</h6>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"date\"\r\n                      className=\"form-control form-control-lg\"\r\n                      name=\"endDate\"\r\n                      value={this.state.endDate}\r\n                      onChange={this.onChange}\r\n                    />\r\n                  </div>\r\n\r\n                  <input\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary btn-block mt-4\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAddProject.propTypes = {\r\n  createProject: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\nconst mapStateToProps = state => ({\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { createProject }\r\n)(AddProject);\r\n","import { GET_ERRORS } from \"../actions/types\";\r\n\r\nconst initialState = {};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_ERRORS:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  projects: [],\r\n  project: {}\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_PROJECTS:\r\n      return {\r\n        ...state,\r\n        projects: action.payload\r\n      };\r\n    case GET_PROJECT:\r\n      return {\r\n        ...state,\r\n        project: action.payload\r\n      };\r\n    case DELETE_PROJECT:\r\n      return {\r\n        ...state,\r\n        projects: state.projects.filter(\r\n          project => project.projectIdentifier !== action.payload\r\n        )\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  GET_BACKLOG,\r\n  GET_PROJECT_TASK,\r\n  DELETE_PROJECT_TASK\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  project_tasks: [],\r\n  project_task: {}\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_BACKLOG:\r\n      return {\r\n        ...state,\r\n        project_tasks: action.payload\r\n      };\r\n    case GET_PROJECT_TASK:\r\n      return {\r\n        ...state,\r\n        project_task: action.payload\r\n      };\r\n    case DELETE_PROJECT_TASK:\r\n      return {\r\n        ...state,\r\n        project_tasks: state.project_tasks.filter(\r\n          project_task => project_task.projectSequence !== action.payload\r\n        )\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { SET_CURRENT_USER } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  user: {},\r\n  validToken: false\r\n};\r\n\r\nconst booleanActionPayload = payload => {\r\n  if (payload) {\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_CURRENT_USER:\r\n      return {\r\n        ...state,\r\n        validToken: booleanActionPayload(action.payload),\r\n        user: action.payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { GET_USER } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  profileUser: {}\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_USER:\r\n      return {\r\n        ...state,\r\n        profileUser: action.payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport errorReducer from \"./errorReducer\";\r\nimport projectReducer from \"./projectReducer\";\r\nimport backlogReducer from \"./backlogReducer\";\r\nimport securityReducer from \"./securityReducer\";\r\nimport profileReducer from \"./profileReducer\";\r\n\r\nexport default combineReducers({\r\n  errors: errorReducer,\r\n  project: projectReducer,\r\n  backlog: backlogReducer,\r\n  security: securityReducer,\r\n  profile: profileReducer\r\n});\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initalState = {};\r\nconst middleware = [thunk];\r\n\r\nlet store;\r\n\r\nconst ReactReduxDevTools =\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\r\n\r\nif (window.navigator.userAgent.includes(\"Chrome\") && ReactReduxDevTools) {\r\n  store = createStore(\r\n    rootReducer,\r\n    initalState,\r\n    compose(\r\n      applyMiddleware(...middleware),\r\n      ReactReduxDevTools\r\n    )\r\n  );\r\n} else {\r\n  store = createStore(\r\n    rootReducer,\r\n    initalState,\r\n    compose(applyMiddleware(...middleware))\r\n  );\r\n}\r\n\r\nexport default store;\r\n","import React, { Component } from \"react\";\r\nimport { getProject, createProject } from \"../../actions/projectActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport Loading from \"../Layout/Loading\";\r\n\r\nclass UpdateProject extends Component {\r\n  constructor() {\r\n    super();\r\n    this.ready = false;\r\n    this.state = {\r\n      id: \"\",\r\n      projectName: \"\",\r\n      projectIdentifier: \"\",\r\n      description: \"\",\r\n      startDate: \"\",\r\n      endDate: \"\",\r\n      errors: {}\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n    const {\r\n      id,\r\n      projectName,\r\n      projectIdentifier,\r\n      description,\r\n      startDate,\r\n      endDate\r\n    } = nextProps.project;\r\n\r\n    this.setState({\r\n      id,\r\n      projectName,\r\n      projectIdentifier,\r\n      description,\r\n      startDate,\r\n      endDate\r\n    });\r\n    this.ready = true;\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    this.props.getProject(id, this.props.history);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const updateProject = {\r\n      id: this.state.id,\r\n      projectName: this.state.projectName,\r\n      projectIdentifier: this.state.projectIdentifier,\r\n      description: this.state.description,\r\n      startDate: this.state.startDate,\r\n      endDate: this.state.endDate\r\n    };\r\n\r\n    this.props.createProject(updateProject, this.props.history);\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    let boardContent;\r\n    const boardingAlgorithm = () => {\r\n      if (this.ready) {\r\n        return (\r\n          <div>\r\n            <div className=\"project\">\r\n              <div className=\"container\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-md-8 m-auto\">\r\n                    <h5 className=\"display-4 text-center text-white\">\r\n                      Update Project form\r\n                    </h5>\r\n                    <hr />\r\n                    <form onSubmit={this.onSubmit}>\r\n                      <div className=\"form-group\">\r\n                        <input\r\n                          type=\"text\"\r\n                          className={classnames(\r\n                            \"form-control form-control-lg \",\r\n                            {\r\n                              \"is-invalid\": errors.projectName\r\n                            }\r\n                          )}\r\n                          placeholder=\"Project Name\"\r\n                          name=\"projectName\"\r\n                          value={this.state.projectName}\r\n                          onChange={this.onChange}\r\n                        />\r\n                        {errors.projectName && (\r\n                          <div className=\"invalid-feedback\">\r\n                            {errors.projectName}\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                      <div className=\"form-group\">\r\n                        <input\r\n                          type=\"text\"\r\n                          className={classnames(\r\n                            \"form-control form-control-lg\",\r\n                            {\r\n                              \"is-invalid\": errors.projectIdentifier\r\n                            }\r\n                          )}\r\n                          placeholder=\"Unique Project ID\"\r\n                          name=\"projectIdentifier\"\r\n                          value={this.state.projectIdentifier}\r\n                          onChange={this.onChange}\r\n                          disabled\r\n                        />\r\n                        {errors.projectIdentifier && (\r\n                          <div className=\"invalid-feedback\">\r\n                            {errors.projectIdentifier}\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                      <div className=\"form-group\">\r\n                        <textarea\r\n                          className={classnames(\r\n                            \"form-control form-control-lg\",\r\n                            {\r\n                              \"is-invalid\": errors.description\r\n                            }\r\n                          )}\r\n                          placeholder=\"Project Description\"\r\n                          name=\"description\"\r\n                          value={this.state.description}\r\n                          onChange={this.onChange}\r\n                        />\r\n                        {errors.description && (\r\n                          <div className=\"invalid-feedback\">\r\n                            {errors.description}\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                      <h6 className=\"text-white\" align=\"right\">\r\n                        Start Date\r\n                      </h6>\r\n                      <div className=\"form-group\">\r\n                        <input\r\n                          type=\"date\"\r\n                          className=\"form-control form-control-lg\"\r\n                          name=\"startDate\"\r\n                          value={this.state.startDate}\r\n                          onChange={this.onChange}\r\n                        />\r\n                      </div>\r\n                      <h6 className=\"text-white\" align=\"right\">\r\n                        Estimated End Date\r\n                      </h6>\r\n                      <div className=\"form-group\">\r\n                        <input\r\n                          type=\"date\"\r\n                          className=\"form-control form-control-lg\"\r\n                          name=\"endDate\"\r\n                          value={this.state.endDate}\r\n                          onChange={this.onChange}\r\n                        />\r\n                      </div>\r\n                      <input\r\n                        type=\"submit\"\r\n                        className=\"btn btn-primary btn-block mt-4\"\r\n                      />\r\n                    </form>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n      } else {\r\n        return <Loading />;\r\n      }\r\n    };\r\n    boardContent = boardingAlgorithm();\r\n    return <div className=\"container\">{boardContent}</div>;\r\n  }\r\n}\r\n\r\nUpdateProject.propTypes = {\r\n  getProject: PropTypes.func.isRequired,\r\n  createProject: PropTypes.func.isRequired,\r\n  project: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  project: state.project.project,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getProject, createProject }\r\n)(UpdateProject);\r\n","import axios from \"axios\";\r\nimport {\r\n  GET_ERRORS,\r\n  GET_BACKLOG,\r\n  GET_PROJECT_TASK,\r\n  DELETE_PROJECT_TASK\r\n} from \"./types\";\r\n\r\nexport const addProjectTask = (\r\n  backlog_id,\r\n  project_task,\r\n  history\r\n) => async dispatch => {\r\n  try {\r\n    await axios.post(`/api/backlog/${backlog_id}`, project_task);\r\n    history.push(`/projectBoard/${backlog_id}`);\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {}\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const getBacklog = backlog_id => async dispatch => {\r\n  try {\r\n    const res = await axios.get(`/api/backlog/${backlog_id}`);\r\n    dispatch({\r\n      type: GET_BACKLOG,\r\n      payload: res.data\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const getProjectTask = (\r\n  backlog_id,\r\n  sequence,\r\n  history\r\n) => async dispatch => {\r\n  try {\r\n    const res = await axios.get(`/api/backlog/${backlog_id}/${sequence}`);\r\n    dispatch({\r\n      type: GET_PROJECT_TASK,\r\n      payload: res.data\r\n    });\r\n  } catch (err) {\r\n    history.push(\"/dashboard\");\r\n  }\r\n};\r\n\r\nexport const deleteProjectTask = (backlog_id, sequence) => async dispatch => {\r\n  try {\r\n    if (\r\n      window.confirm(\r\n        `You are deleting project task ${sequence}, this action cannot be undone`\r\n      )\r\n    ) {\r\n      await axios.delete(`/api/backlog/${backlog_id}/${sequence}`);\r\n      dispatch({\r\n        type: DELETE_PROJECT_TASK,\r\n        payload: sequence\r\n      });\r\n    }\r\n  } catch (err) {}\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { deleteProjectTask } from \"../../../actions/backlogActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass ProjectTask extends Component {\r\n  onDeleteClick(backlog_id, sequence) {\r\n    this.props.deleteProjectTask(backlog_id, sequence);\r\n  }\r\n\r\n  render() {\r\n    const project_task = this.props.project_task;\r\n    let priorityString;\r\n    let priorityClass;\r\n\r\n    if (project_task.priority === 1) {\r\n      priorityClass = \"bg-danger text-light\";\r\n      priorityString = \" HIGH \";\r\n    } else if (project_task.priority === 2) {\r\n      priorityClass = \"bg-warning text-light\";\r\n      priorityString = \" MEDIUM \";\r\n    } else if (project_task.priority === 3) {\r\n      priorityClass = \"bg-info text-light\";\r\n      priorityString = \" LOW \";\r\n    }\r\n    return (\r\n      <div className=\"card mb-1 bg-light\">\r\n        <div className={`card-header text-primary ${priorityClass}`}>\r\n          ID: {project_task.projectSequence} -- Priority:\r\n          {priorityString}\r\n        </div>\r\n        <div className=\"card-body bg-light\">\r\n          <h5 className=\"card-title\">{project_task.summary}</h5>\r\n          <p className=\"card-text text-truncate \">\r\n            {project_task.acceptanceCriteria}\r\n          </p>\r\n          <Link\r\n            to={`/updateProjectTask/${project_task.projectIdentifier}/${\r\n              project_task.projectSequence\r\n            }`}\r\n            className=\"btn btn-primary\"\r\n          >\r\n            View / Update\r\n          </Link>\r\n\r\n          <button\r\n            className=\"btn btn-danger ml-1\"\r\n            onClick={this.onDeleteClick.bind(\r\n              this,\r\n              project_task.projectIdentifier,\r\n              project_task.projectSequence\r\n            )}\r\n          >\r\n            Delete\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nProjectTask.propTypes = {\r\n  deleteProjectTask: PropTypes.func.isRequired\r\n};\r\nexport default connect(\r\n  null,\r\n  { deleteProjectTask }\r\n)(ProjectTask);\r\n","import React, { Component } from \"react\";\r\nimport ProjectTask from \"./ProjectTasks/ProjectTask\";\r\n\r\nclass Backlog extends Component {\r\n  render() {\r\n    const project_task_prop = this.props.project_tasks;\r\n    const tasks = project_task_prop.map(project_task => (\r\n      <ProjectTask key={project_task.id} project_task={project_task} />\r\n    ));\r\n    let toDoItems = [];\r\n    let inProgressItems = [];\r\n    let doneItems = [];\r\n    let incompleteItems = [];\r\n\r\n    for (let i = 0; i < tasks.length; i++) {\r\n      if (tasks[i].props.project_task.status === \"TO_DO\") {\r\n        toDoItems.push(tasks[i]);\r\n      } else if (tasks[i].props.project_task.status === \"IN_PROGRESS\") {\r\n        inProgressItems.push(tasks[i]);\r\n      } else if (tasks[i].props.project_task.status === \"DONE\") {\r\n        doneItems.push(tasks[i]);\r\n      } else if (tasks[i].props.project_task.status === \"INCOMPLETE\") {\r\n        incompleteItems.push(tasks[i]);\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-3\">\r\n            <div className=\"card text-center mb-2\">\r\n              <div className=\"card-header bg-warning text-white\">\r\n                <h3>To-Do</h3>\r\n              </div>\r\n            </div>\r\n            {toDoItems}\r\n          </div>\r\n\r\n          <div className=\"col-md-3\">\r\n            <div className=\"card text-center mb-2\">\r\n              <div className=\"card-header bg-primary text-white\">\r\n                <h3>In-Progress</h3>\r\n              </div>\r\n            </div>\r\n            {inProgressItems}\r\n          </div>\r\n          <div className=\"col-md-3\">\r\n            <div className=\"card text-center mb-2\">\r\n              <div className=\"card-header bg-success text-white\">\r\n                <h3>Complete</h3>\r\n              </div>\r\n            </div>\r\n            {doneItems}\r\n          </div>\r\n          <div className=\"col-md-3\">\r\n            <div className=\"card text-center mb-2\">\r\n              <div className=\"card-header bg-danger text-white\">\r\n                <h3>In-Complete</h3>\r\n              </div>\r\n            </div>\r\n            {incompleteItems}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Backlog;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Backlog from \"./Backlog\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { getBacklog } from \"../../actions/backlogActions\";\r\nimport Loading from \"../Layout/Loading\";\r\n\r\nclass ProjectBoard extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      errors: {}\r\n    };\r\n    this.ready = false;\r\n  }\r\n\r\n  componentDidMount() {\r\n    const id = this.props.match.params.id;\r\n    this.props.getBacklog(id);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n    this.ready = true;\r\n  }\r\n\r\n  render() {\r\n    const id = this.props.match.params.id;\r\n    const project_tasks = this.props.backlog.project_tasks;\r\n    const errors = this.props.errors;\r\n\r\n    let boardContent;\r\n    const boardAlgorithm = (errors, project_tasks) => {\r\n      if (this.ready) {\r\n        if (project_tasks.length < 1) {\r\n          if (errors.projectNotFound) {\r\n            return (\r\n              <div className=\"alert alert-danger text-center\" role=\"alert\">\r\n                {errors.projectNotFound}\r\n              </div>\r\n            );\r\n          } else if (errors.projectIdentifier) {\r\n            return (\r\n              <div className=\"alert alert-danger text-center\" role=\"alert\">\r\n                {errors.projectIdentifier}\r\n              </div>\r\n            );\r\n          } else {\r\n            return (\r\n              <div className=\"alert alert-info text-center\" role=\"alert\">\r\n                No Project Tasks on this board\r\n              </div>\r\n            );\r\n          }\r\n        } else {\r\n          return <Backlog project_tasks={project_tasks} />;\r\n        }\r\n      } else {\r\n        return <Loading />;\r\n      }\r\n    };\r\n\r\n    boardContent = boardAlgorithm(errors, project_tasks);\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <Link to={`/addProjectTask/${id}`} className=\"btn btn-primary mb-3\">\r\n          <i className=\"fas fa-plus-circle\"> Create Project Task</i>\r\n        </Link>\r\n        <br />\r\n        <hr />\r\n        {boardContent}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nProjectBoard.propTypes = {\r\n  backlog: PropTypes.object.isRequired,\r\n  getBacklog: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  backlog: state.backlog,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getBacklog }\r\n)(ProjectBoard);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport classnames from \"classnames\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { addProjectTask } from \"../../../actions/backlogActions\";\r\n\r\nclass AddProjectTask extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const id = this.props.match.params.id;\r\n    this.state = {\r\n      summary: \"\",\r\n      acceptanceCriteria: \"\",\r\n      status: \"\",\r\n      priority: \"\",\r\n      dueDate: \"\",\r\n      projectIdentifier: id,\r\n      errors: {}\r\n    };\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const newProjectTask = {\r\n      summary: this.state.summary,\r\n      acceptanceCriteria: this.state.acceptanceCriteria,\r\n      status: this.state.status,\r\n      priority: this.state.priority,\r\n      dueDate: this.state.dueDate,\r\n      projectIdentifier: this.state.projectIdentifier\r\n    };\r\n\r\n    this.props.addProjectTask(\r\n      this.state.projectIdentifier,\r\n      newProjectTask,\r\n      this.props.history\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { id } = this.props.match.params.id;\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"add-PBI text-white\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto \">\r\n              <Link\r\n                to={`/projectBoard/${id}`}\r\n                className=\"btn btn-warning text-white\"\r\n              >\r\n                Back to Project Board\r\n              </Link>\r\n              <h4 className=\"display-4 text-center\">Add Project Task</h4>\r\n              <p className=\"lead text-center\">Project Name + Project Code</p>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.summary\r\n                    })}\r\n                    name=\"summary\"\r\n                    placeholder=\"Project Task summary\"\r\n                    value={this.state.summary}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.summary && (\r\n                    <div className=\"invalid-feedback\">{errors.summary}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className=\"form-control form-control-lg\"\r\n                    placeholder=\"Acceptance Criteria\"\r\n                    name=\"acceptanceCriteria\"\r\n                    value={this.state.acceptanceCriteria}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <h6>Due Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"dueDate\"\r\n                    value={this.state.dueDate}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"priority\"\r\n                    value={this.state.priority}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value={0}>Select Priority</option>\r\n                    <option value={1}>High</option>\r\n                    <option value={2}>Medium</option>\r\n                    <option value={3}>Low</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"status\"\r\n                    value={this.state.status}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value=\"\">Select Status</option>\r\n                    <option value=\"TO_DO\">TO DO</option>\r\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\r\n                    <option value=\"DONE\">DONE</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nAddProjectTask.propTypes = {\r\n  addProjectTask: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { addProjectTask }\r\n)(AddProjectTask);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport {\r\n  addProjectTask,\r\n  getProjectTask\r\n} from \"../../../actions/backlogActions\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Loading from \"../../Layout/Loading\";\r\n\r\nclass UpdateProjectTask extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const id = this.props.match.params.id;\r\n    const sequence = this.props.match.params.sequence;\r\n    this.state = {\r\n      id: \"\",\r\n      projectSequence: sequence,\r\n      summary: \"\",\r\n      acceptanceCriteria: \"\",\r\n      status: \"\",\r\n      priority: \"\",\r\n      dueDate: \"\",\r\n      projectIdentifier: id,\r\n      createdAt: \"\",\r\n      errors: {}\r\n    };\r\n    this.ready = false;\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n    const {\r\n      id,\r\n      projectSequence,\r\n      summary,\r\n      acceptanceCriteria,\r\n      status,\r\n      priority,\r\n      dueDate,\r\n      projectIdentifier,\r\n      createdAt\r\n    } = nextProps.project_task;\r\n\r\n    this.setState({\r\n      id,\r\n      projectSequence,\r\n      summary,\r\n      acceptanceCriteria,\r\n      status,\r\n      priority,\r\n      dueDate,\r\n      projectIdentifier,\r\n      createdAt\r\n    });\r\n    this.ready = true;\r\n  }\r\n\r\n  componentDidMount() {\r\n    const id = this.props.match.params.id;\r\n    const sequence = this.props.match.params.sequence;\r\n    this.props.getProjectTask(id, sequence, this.props.history);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const updatedProjectTask = {\r\n      id: this.state.id,\r\n      projectSequence: this.state.projectSequence,\r\n      summary: this.state.summary,\r\n      acceptanceCriteria: this.state.acceptanceCriteria,\r\n      status: this.state.status,\r\n      priority: this.state.priority,\r\n      dueDate: this.state.dueDate,\r\n      projectIdentifier: this.state.projectIdentifier,\r\n      createdAt: this.state.createdAt\r\n    };\r\n\r\n    this.props.addProjectTask(\r\n      this.state.projectIdentifier,\r\n      updatedProjectTask,\r\n      this.props.history\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    let boardContent;\r\n    const boardAlgorithm = () => {\r\n      if (this.ready) {\r\n        return (\r\n          <div className=\"add-PBI\">\r\n            <div className=\"container\">\r\n              <div className=\"row text-white\">\r\n                <div className=\"col-md-8 m-auto\">\r\n                  <Link to=\"/dashboard\" className=\"btn btn-warning text-white\">\r\n                    Back to Project Board\r\n                  </Link>\r\n                  <h4 className=\"display-4 text-center\">Update Project Task</h4>\r\n                  <p className=\"lead2 text-center text-white\">\r\n                    {this.state.projectIdentifier}/{this.state.projectSequence}\r\n                  </p>\r\n                  <form onSubmit={this.onSubmit}>\r\n                    <div className=\"form-group\">\r\n                      <input\r\n                        type=\"text\"\r\n                        className={classnames(\"form-control form-control-lg\", {\r\n                          \"is-invalid\": errors.summary\r\n                        })}\r\n                        name=\"summary\"\r\n                        placeholder=\"Project Task summary\"\r\n                        value={this.state.summary}\r\n                        onChange={this.onChange}\r\n                      />\r\n                      {errors.summary && (\r\n                        <div className=\"invalid-feedback\">{errors.summary}</div>\r\n                      )}\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                      <textarea\r\n                        className=\"form-control form-control-lg\"\r\n                        placeholder=\"Acceptance Criteria\"\r\n                        name=\"acceptanceCriteria\"\r\n                        value={this.state.acceptanceCriteria}\r\n                        onChange={this.onChange}\r\n                      />\r\n                    </div>\r\n                    <h6 align=\"right\">Due Date</h6>\r\n                    <div className=\"form-group\">\r\n                      <input\r\n                        type=\"date\"\r\n                        className=\"form-control form-control-lg\"\r\n                        name=\"dueDate\"\r\n                        value={this.state.dueDate}\r\n                        onChange={this.onChange}\r\n                      />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                      <select\r\n                        className=\"form-control form-control-lg\"\r\n                        name=\"priority\"\r\n                        value={this.state.priority}\r\n                        onChange={this.onChange}\r\n                      >\r\n                        <option value={0}>Select Priority</option>\r\n                        <option value={1}>High</option>\r\n                        <option value={2}>Medium</option>\r\n                        <option value={3}>Low</option>\r\n                      </select>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                      <select\r\n                        className=\"form-control form-control-lg\"\r\n                        name=\"status\"\r\n                        value={this.state.status}\r\n                        onChange={this.onChange}\r\n                      >\r\n                        <option value=\"\">Select Status</option>\r\n                        <option value=\"TO_DO\">TO DO</option>\r\n                        <option value=\"IN_PROGRESS\">IN PROGRESS</option>\r\n                        <option value=\"DONE\">DONE</option>\r\n                      </select>\r\n                    </div>\r\n\r\n                    <input\r\n                      type=\"submit\"\r\n                      className=\"btn btn-primary btn-block mt-4\"\r\n                    />\r\n                  </form>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n      } else {\r\n        return <Loading />;\r\n      }\r\n    };\r\n    boardContent = boardAlgorithm();\r\n    return <div className=\"container\">{boardContent}</div>;\r\n  }\r\n}\r\n\r\nUpdateProjectTask.propTypes = {\r\n  getProjectTask: PropTypes.func.isRequired,\r\n  project_task: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  project_task: state.backlog.project_task,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getProjectTask, addProjectTask }\r\n)(UpdateProjectTask);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass Landing extends Component {\r\n  componentDidMount() {\r\n    if (this.props.security.validToken) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"landing\">\r\n        <div className=\"light-overlay landing-inner\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12 text-center\">\r\n                <h1 className=\"display-3 mb-4\">\r\n                  Personal Project Management Tool\r\n                </h1>\r\n                <p className=\"lead\">\r\n                  Create your account to join active projects or start your own\r\n                </p>\r\n                <hr />\r\n                <Link to=\"/register\" className=\"btn btn-lg btn-primary mr-2\">\r\n                  Sign Up\r\n                </Link>\r\n                <Link to=\"/login\" className=\"btn btn-lg btn-secondary mr-2\">\r\n                  Login\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLanding.propTypes = {\r\n  security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  security: state.security\r\n});\r\nexport default connect(mapStateToProps)(Landing);\r\n","import React, { Component } from \"react\";\r\nimport { createNewUser } from \"../../actions/securityActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\n\r\nclass Register extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      username: \"\",\r\n      fullname: \"\",\r\n      password: \"\",\r\n      confirmPassword: \"\",\r\n      errors: {}\r\n    };\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n  componentDidMount() {\r\n    if (this.props.security.validToken) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const newUser = {\r\n      username: this.state.username,\r\n      fullname: this.state.fullname,\r\n      password: this.state.password,\r\n      confirmPassword: this.state.confirmPassword\r\n    };\r\n    this.props.createNewUser(newUser, this.props.history);\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"register\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h1 className=\"display-4 text-center\">Sign Up</h1>\r\n              <p className=\"lead text-center\">Create your Account</p>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control form-control-lg\"\r\n                    placeholder=\"Full Name\"\r\n                    name=\"fullname\"\r\n                    value={this.state.fullname}\r\n                    onChange={this.onChange}\r\n                    required\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.username\r\n                    })}\r\n                    placeholder=\"Email Address(as username)\"\r\n                    name=\"username\"\r\n                    value={this.state.username}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.username && (\r\n                    <div className=\"invalid-feedback\">{errors.username}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.password\r\n                    })}\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    value={this.state.password}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.password && (\r\n                    <div className=\"invalid-feedback\">{errors.password}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.confirmPassword\r\n                    })}\r\n                    placeholder=\"Confirm Password\"\r\n                    name=\"confirmPassword\"\r\n                    value={this.state.confirmPassword}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.confirmPassword && (\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors.confirmPassword}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nRegister.propTypes = {\r\n  createNewUser: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n  security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  security: state.security,\r\n  errors: state.errors\r\n});\r\nexport default connect(\r\n  mapStateToProps,\r\n  { createNewUser }\r\n)(Register);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport { login } from \"../../actions/securityActions\";\r\n\r\nclass Login extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n      errors: {}\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n  componentDidMount() {\r\n    if (this.props.security.validToken) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.security.validToken) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const newLogin = {\r\n      username: this.state.username,\r\n      password: this.state.password\r\n    };\r\n    this.props.login(newLogin);\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"login\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h1 className=\"display-4 text-center\">Log In</h1>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.username\r\n                    })}\r\n                    placeholder=\"Email Address\"\r\n                    name=\"username\"\r\n                    value={this.state.username}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.username && (\r\n                    <div className=\"invalid-feedback\">{errors.username}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.password\r\n                    })}\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    value={this.state.password}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.password && (\r\n                    <div className=\"invalid-feedback\">{errors.password}</div>\r\n                  )}\r\n                </div>\r\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nLogin.propTypes = {\r\n  login: PropTypes.func.isRequired,\r\n  security: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  security: state.security,\r\n  errors: state.errors\r\n});\r\nexport default connect(\r\n  mapStateToProps,\r\n  { login }\r\n)(Login);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getUser } from \"../../actions/securityActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport Loading from \"../Layout/Loading\";\r\n\r\nclass Profile extends Component {\r\n  constructor() {\r\n    super();\r\n    this.ready = false;\r\n    this.state = {\r\n      errors: {}\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    const username = this.props.match.params.username;\r\n    this.props.getUser(username);\r\n  }\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n    this.ready = true;\r\n  }\r\n\r\n  render() {\r\n    const user = this.props.user;\r\n    const profileUser = this.props.profileUser;\r\n    const errors = this.props.errors;\r\n    let editContent;\r\n    let genderContent;\r\n    const genderProfileImage = gender => {\r\n      console.log(gender);\r\n      if (gender === \"Female\") {\r\n        return (\r\n          <img\r\n            alt=\"User Pic\"\r\n            src=\"https://img.icons8.com/ios/1600/user-female-circle-filled.png\"\r\n            className=\"img-circle img-responsive\"\r\n          />\r\n        );\r\n      } else {\r\n        return (\r\n          <img\r\n            alt=\"User Pic\"\r\n            src=\"https://cdn2.iconfinder.com/data/icons/rcons-user/32/male-fill-circle-512.png\"\r\n            className=\"img-circle img-responsive\"\r\n          />\r\n        );\r\n      }\r\n    };\r\n    const editButton = (user, profileUser) => {\r\n      if (user.username === profileUser.username) {\r\n        return (\r\n          <div className=\"btn btn-info col-md-2 offset-md-9\">\r\n            <Link to={`./${user.username}/edit`} className=\"text-white\">\r\n              Edit Profile Info\r\n            </Link>\r\n          </div>\r\n        );\r\n      }\r\n    };\r\n    editContent = editButton(user, profileUser);\r\n    genderContent = genderProfileImage(profileUser.gender);\r\n    const boardAlgorithm = errors => {\r\n      if (this.ready) {\r\n        if (errors.userNotFound !== undefined) {\r\n          return (\r\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\r\n              {errors.userNotFound}\r\n            </div>\r\n          );\r\n        } else {\r\n          return (\r\n            <div className=\"container bg-white\">\r\n              <div className=\"row\" align=\"center\">\r\n                <div className=\"col-xs-12 col-sm-12 col-md-12 col-lg-12 col-xs-offset-0 col-sm-offset-0 col-md-offset-3 col-lg-offset-3 toppad\">\r\n                  <div className=\"panel panel-info\">\r\n                    <div className=\"panel-heading \">\r\n                      <div className=\"row\">\r\n                        <h3 className=\"panel-title col-md-4 offset-md-4\">\r\n                          {profileUser.fullname}\r\n                        </h3>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"panel-body\">\r\n                      <div className=\"row\">\r\n                        <div className=\"col-md-12\">\r\n                          <div className=\"col-md-3 col-lg-3 col-md-offset-3 col-lg-offset-3\">\r\n                            {genderContent}\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n\r\n                      {editContent}\r\n                      <div className=\"col-md-9 col-lg-9\">\r\n                        <table className=\"table table-user-information\">\r\n                          <tbody>\r\n                            <tr>\r\n                              <td>Deparment:</td>\r\n                              <td>{profileUser.department}</td>\r\n                            </tr>\r\n                            <tr>\r\n                              <td>Hire Date:</td>\r\n                              <td>{profileUser.hire_date}</td>\r\n                            </tr>\r\n                            <tr>\r\n                              <td>Date Of Birth:</td>\r\n                              <td>{profileUser.birth_date}</td>\r\n                            </tr>\r\n                            <tr>\r\n                              <td>Gender:</td>\r\n                              <td>{profileUser.gender}</td>\r\n                            </tr>\r\n                            <tr>\r\n                              <td>Home Address:</td>\r\n                              <td>{profileUser.address}</td>\r\n                            </tr>\r\n                            <tr>\r\n                              <td>Email:</td>\r\n                              <td>{profileUser.username}</td>\r\n                            </tr>\r\n                            <tr>\r\n                              <td>Phone Number:</td>\r\n                              <td>{profileUser.phoneNumber}</td>\r\n                            </tr>\r\n                          </tbody>\r\n                        </table>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"panel-footer\">\r\n                      <div className=\"col-md-12 col-lg-12\">\r\n                        <a\r\n                          href=\"https://github.com/imserkan\"\r\n                          data-original-title=\"Broadcast Message\"\r\n                          data-toggle=\"tooltip\"\r\n                          type=\"button\"\r\n                          className=\"btn btn-sm btn-primary col-md-1 col-lg-1\"\r\n                        >\r\n                          GitHub\r\n                          <i className=\"glyphicon glyphicon-envelope\" />\r\n                        </a>\r\n                        <a\r\n                          href=\"https://twitter.com/IslamogluSerkan\"\r\n                          data-original-title=\"Edit this user\"\r\n                          data-toggle=\"tooltip\"\r\n                          type=\"button\"\r\n                          className=\"btn btn-sm btn-warning col-md-1 col-md-offset-10 \"\r\n                        >\r\n                          Twitter\r\n                          <i className=\"glyphicon glyphicon-edit\" />\r\n                        </a>\r\n                        <a\r\n                          href=\"https://linkedin.com/in/serkan-islamoglu-41a158169/\"\r\n                          data-original-title=\"Remove this user\"\r\n                          data-toggle=\"tooltip\"\r\n                          type=\"button\"\r\n                          className=\"btn btn-sm btn-danger col-md-1 col-md-offset-11\"\r\n                        >\r\n                          Linked-In\r\n                          <i className=\"glyphicon glyphicon-remove\" />\r\n                        </a>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          );\r\n        }\r\n      } else {\r\n        return <Loading />;\r\n      }\r\n    };\r\n\r\n    let boardContent;\r\n    boardContent = boardAlgorithm(errors);\r\n    return <div className=\"container\">{boardContent}</div>;\r\n  }\r\n}\r\n\r\nProfile.propTypes = {\r\n  profileUser: PropTypes.object.isRequired,\r\n  user: PropTypes.object.isRequired,\r\n  getUser: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  profileUser: state.profile.profileUser,\r\n  user: state.security.user,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getUser }\r\n)(Profile);\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst SecuredRoute = ({ component: Component, security, ...otherProps }) => (\r\n  <Route\r\n    {...otherProps}\r\n    render={props =>\r\n      security.validToken === true ? (\r\n        <Component {...props} />\r\n      ) : (\r\n        <Redirect to=\"/login\" />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nSecuredRoute.propTypes = {\r\n  security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  security: state.security\r\n});\r\n\r\nexport default connect(mapStateToProps)(SecuredRoute);\r\n","import React, { Component } from \"react\";\r\nimport { getUser, updateUser } from \"../../../actions/securityActions\";\r\nimport { fileUpload } from \"../../../actions/uploadActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport Loading from \"../../Layout/Loading\";\r\n\r\nclass UpdateUserProfile extends Component {\r\n  constructor() {\r\n    super();\r\n    this.ready = false;\r\n    this.state = {\r\n      id: \"\",\r\n      username: \"\",\r\n      fullname: \"\",\r\n      selectedFile: null,\r\n      password: \"\",\r\n      department: \"\",\r\n      hire_date: \"\",\r\n      birth_date: \"\",\r\n      gender: \"\",\r\n      address: \"\",\r\n      phoneNumber: \"\",\r\n      errors: {}\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n    const {\r\n      id,\r\n      username,\r\n      fullname,\r\n      password,\r\n      department,\r\n      hire_date,\r\n      birth_date,\r\n      gender,\r\n      address,\r\n      phoneNumber\r\n    } = nextProps.profileUser;\r\n    this.setState({\r\n      id,\r\n      username,\r\n      fullname,\r\n      password,\r\n      department,\r\n      hire_date,\r\n      birth_date,\r\n      gender,\r\n      address,\r\n      phoneNumber\r\n    });\r\n    this.ready = true;\r\n  }\r\n  componentDidMount() {\r\n    const username = this.props.match.params.username;\r\n    this.props.getUser(username);\r\n  }\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const username = this.props.match.params.username;\r\n    const updateProfile = {\r\n      id: this.state.id,\r\n      username: this.state.username,\r\n      fullname: this.state.fullname,\r\n      department: this.state.department,\r\n      hire_date: this.state.hire_date,\r\n      birth_date: this.state.birth_date,\r\n      gender: this.state.gender,\r\n      address: this.state.address,\r\n      phoneNumber: this.state.phoneNumber\r\n    };\r\n    this.props.updateUser(updateProfile, username, this.props.history);\r\n  }\r\n  fileSelectedHandler = event => {\r\n    this.setState({ selectedFile: event.target.files[0] });\r\n  };\r\n  fileUploadHandler = event => {\r\n    const fd = new FormData();\r\n    fd.append(\"image\", this.state.selectedFile, this.state.selectedFile.name);\r\n    this.props.fileUpload(fd);\r\n  };\r\n  render() {\r\n    const BoardAlgorithm = () => {\r\n      if (this.ready) {\r\n        return (\r\n          <div>\r\n            <div className=\"project\">\r\n              <div className=\"container\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-md-8 m-auto\">\r\n                    <h5 className=\"display-4 text-center text-white\">\r\n                      Update Profile Information\r\n                    </h5>\r\n                    <hr />\r\n                    <form onSubmit={this.onSubmit}>\r\n                      <div className=\"form-group\">\r\n                        <input\r\n                          type=\"text\"\r\n                          className=\"form-control form-control-lg\"\r\n                          placeholder=\"Username\"\r\n                          name=\"username\"\r\n                          value={this.state.username}\r\n                          disabled\r\n                        />\r\n                      </div>\r\n                      <div className=\"form-group\">\r\n                        <input\r\n                          type=\"text\"\r\n                          className=\"form-control form-control-lg\"\r\n                          placeholder=\"Full-Name\"\r\n                          name=\"fullname\"\r\n                          value={this.state.fullname}\r\n                          onChange={this.onChange}\r\n                        />\r\n                      </div>\r\n                      <div className=\"form-group\">\r\n                        <textarea\r\n                          className=\"form-control form-control-lg\"\r\n                          placeholder=\"Department\"\r\n                          name=\"department\"\r\n                          value={this.state.department}\r\n                          onChange={this.onChange}\r\n                        />\r\n                      </div>\r\n                      <h6 className=\"text-white\" align=\"right\">\r\n                        Hire Date:\r\n                      </h6>\r\n                      <div className=\"form-group\">\r\n                        <input\r\n                          type=\"date\"\r\n                          className=\"form-control form-control-lg\"\r\n                          name=\"hire_date\"\r\n                          value={this.state.hire_date}\r\n                          onChange={this.onChange}\r\n                        />\r\n                      </div>\r\n                      <h6 className=\"text-white\" align=\"right\">\r\n                        Birth Date:\r\n                      </h6>\r\n                      <div className=\"form-group\">\r\n                        <input\r\n                          type=\"date\"\r\n                          className=\"form-control form-control-lg\"\r\n                          name=\"birth_date\"\r\n                          value={this.state.birth_date}\r\n                          onChange={this.onChange}\r\n                        />\r\n                      </div>\r\n                      <div className=\"form-group\">\r\n                        <select\r\n                          className=\"form-control form-control-lg\"\r\n                          name=\"gender\"\r\n                          value={this.state.gender}\r\n                          onChange={this.onChange}\r\n                        >\r\n                          <option value={0}>Select gender</option>\r\n                          <option value={\"Male\"}>Male</option>\r\n                          <option value={\"Female\"}>Female</option>\r\n                          <option value={\"Other\"}>Other</option>\r\n                        </select>\r\n                      </div>\r\n                      <h6 className=\"text-white\" align=\"right\">\r\n                        Address:\r\n                      </h6>\r\n                      <div className=\"form-group\">\r\n                        <textarea\r\n                          type=\"textarea\"\r\n                          className=\"form-control form-control-lg\"\r\n                          name=\"address\"\r\n                          value={this.state.address}\r\n                          onChange={this.onChange}\r\n                        />\r\n                      </div>\r\n                      <div className=\"form-group\">\r\n                        <h6 className=\"text-white\" align=\"right\">\r\n                          Phone Number:\r\n                        </h6>\r\n                        <input\r\n                          type=\"number\"\r\n                          className=\"form-control form-control-lg\"\r\n                          name=\"phoneNumber\"\r\n                          value={this.state.phoneNumber}\r\n                          onChange={this.onChange}\r\n                        />\r\n                      </div>\r\n                      <div className=\"form-group\">\r\n                        <input\r\n                          type=\"submit\"\r\n                          className=\"btn btn-primary btn-block\"\r\n                        />\r\n                      </div>\r\n                    </form>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n      } else {\r\n        return <Loading />;\r\n      }\r\n    };\r\n    let boardContent = BoardAlgorithm();\r\n    return <div className=\"container\">{boardContent}</div>;\r\n  }\r\n}\r\nUpdateUserProfile.propTypes = {\r\n  updateUser: PropTypes.func.isRequired,\r\n  user: PropTypes.object.isRequired,\r\n  getUser: PropTypes.func.isRequired,\r\n  fileUpload: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\nconst mapStateToProps = state => ({\r\n  profileUser: state.profile.profileUser,\r\n  user: state.security.user,\r\n  errors: state.errors\r\n});\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getUser, updateUser, fileUpload }\r\n)(UpdateUserProfile);\r\n","import axios from \"axios\";\r\nimport { GET_ERRORS, GET_UPLOADED_FILE } from \"./types\";\r\n\r\nexport const fileUpload = file => async dispatch => {\r\n  try {\r\n    const res = await axios.post(`/fileUpload/`, {\r\n      onUploadProgress: progressEvent => {\r\n        console.log(\r\n          \"Uploaded Progress: \" +\r\n            Math.round((progressEvent.loaded / progressEvent.total) * 100) +\r\n            \"%.\"\r\n        );\r\n      }\r\n    });\r\n    dispatch({\r\n      type: GET_UPLOADED_FILE,\r\n      payload: res.data\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: error.response.data\r\n    });\r\n  }\r\n};\r\n","import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport Dashboard from \"./components/Dashboard\";\r\nimport Header from \"./components/Layout/Header\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"../node_modules/jquery/dist/jquery.min.js\";\r\nimport \"../node_modules/bootstrap/dist/js/bootstrap.min.js\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport AddProject from \"./components/Project/AddProject\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\nimport UpdateProject from \"./components/Project/UpdateProject\";\r\nimport ProjectBoard from \"./components/ProjectBoard/ProjectBoard\";\r\nimport AddProjectTask from \"./components/ProjectBoard/ProjectTasks/AddProjectTask\";\r\nimport UpdateProjectTask from \"./components/ProjectBoard/ProjectTasks/UpdateProjectTask\";\r\nimport Landing from \"./components/Layout/Landing\";\r\nimport Register from \"./components/UserComponent/Register\";\r\nimport Login from \"./components/UserComponent/Login\";\r\nimport Profile from \"./components/UserComponent/Profile\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport setJWToken from \"./securityUtils/setJWToken\";\r\nimport { SET_CURRENT_USER } from \"./actions/types\";\r\nimport { logout } from \"./actions/securityActions\";\r\nimport SecuredRoute from \"./securityUtils/SecureRoutes\";\r\nimport UpdateUserProfile from \"./components/UserComponent/UserProfile/UpdateUserProfile\";\r\n\r\nconst jwtToken = localStorage.jwtToken;\r\n\r\nif (jwtToken) {\r\n  setJWToken(jwtToken);\r\n  const decoded = jwt_decode(jwtToken);\r\n  store.dispatch({\r\n    type: SET_CURRENT_USER,\r\n    payload: decoded\r\n  });\r\n\r\n  const currentTime = Date.now() / 1000;\r\n  if (decoded.exp < currentTime) {\r\n    store.dispatch(logout());\r\n    window.location.href = \"/\";\r\n  }\r\n}\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Provider store={store}>\r\n        <Router>\r\n          <div className=\"App\">\r\n            <Header />\r\n            {\r\n              //Public Routes\r\n            }\r\n            <Route exact path=\"/\" component={Landing} />\r\n            <Route exact path=\"/register\" component={Register} />\r\n            <Route exact path=\"/login\" component={Login} />\r\n            {\r\n              //Private Routes\r\n            }\r\n            <Switch>\r\n              <SecuredRoute exact path=\"/dashboard\" component={Dashboard} />\r\n              <SecuredRoute exact path=\"/addProject\" component={AddProject} />\r\n              <SecuredRoute\r\n                exact\r\n                path=\"/updateProject/:id\"\r\n                component={UpdateProject}\r\n              />\r\n              <SecuredRoute\r\n                exact\r\n                path=\"/projectBoard/:id\"\r\n                component={ProjectBoard}\r\n              />\r\n              <SecuredRoute\r\n                exact\r\n                path=\"/addProjectTask/:id\"\r\n                component={AddProjectTask}\r\n              />\r\n              <SecuredRoute\r\n                exact\r\n                path=\"/updateProjectTask/:id/:sequence\"\r\n                component={UpdateProjectTask}\r\n              />\r\n              <SecuredRoute\r\n                exact\r\n                path=\"/profile/:username\"\r\n                component={Profile}\r\n              />\r\n              <SecuredRoute\r\n                exact\r\n                path=\"/profile/:username/edit\"\r\n                component={UpdateUserProfile}\r\n              />\r\n            </Switch>\r\n          </div>\r\n        </Router>\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            \"This web app is being served cache-first by a service \" +\r\n              \"worker. To learn more, visit https://goo.gl/SC7cgQ\"\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log(\"New content is available; please refresh.\");\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport registerServiceWorker from \"./registerServiceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}